/**
  ******************************************************************************
  * @file    ReadMe.txt
  * @author  HWW
  * @version 1.0
  * @date    2021/10/12
  * @brief   updatelog...
  ******************************************************************************
  用于记录程序修改点
  程序需注意的重点等
  ******************************************************************************
  */
==================================================存储单元分配=================================================================

-Code：代码的大小
-RO：常量所占空间
-RW：程序中已经初始化的变量所占空间
-ZI：未初始化的static和全局变量以及堆栈所占的空间

-Flash占用大小 = Code+RO+RW     最大240k
-SRAM 占用大小 = RW+ZI          最大128k

//#define ADDR_FLASH_SECTOR_0    ((uint32_t)0x08000000)    //扇区0起始地址,  16 Kbytes

//#define ADDR_FLASH_SECTOR_1    ((uint32_t)0x08004000)    //扇区1起始地址,  16 Kbytes
//#define ADDR_FLASH_SECTOR_2    ((uint32_t)0x08008000)    //扇区2起始地址,  16 Kbytes
//#define ADDR_FLASH_SECTOR_3    ((uint32_t)0x0800C000)    //扇区3起始地址,  16 Kbytes 
//#define ADDR_FLASH_SECTOR_4    ((uint32_t)0x08010000)    //扇区4起始地址,  64 Kbytes
//#define ADDR_FLASH_SECTOR_5    ((uint32_t)0x08020000)    //扇区5起始地址, 128 Kbytes

//#define ADDR_FLASH_SECTOR_6    ((uint32_t)0x08040000)    //扇区6起始地址, 128 Kbytes
//#define ADDR_FLASH_SECTOR_7    ((uint32_t)0x08060000)    //扇区7起始地址, 128 Kbytes
//#define ADDR_FLASH_SECTOR_8    ((uint32_t)0x08080000)    //扇区8起始地址, 128 Kbytes

//#define ADDR_FLASH_SECTOR_9    ((uint32_t)0x080A0000)    //扇区9起始地址, 128 Kbytes
//#define ADDR_FLASH_SECTOR_10   ((uint32_t)0x080C0000)    //扇区10起始地址, 128 Kbytes
//#define ADDR_FLASH_SECTOR_11   ((uint32_t)0x080E0000)    //扇区11起始地址, 128 Kbytes


E2PROM：
-最小容量16k*bits = 2k*Bytes
-以末尾地址（即）addr = 2040 存储Boot标记

UART1     RS485_1       推杆              RX = PA10   TX = PA9        EN = PA11                      输出时有时无
-----UART5     RS485_2       拉线              RX = PD2    TX = PC12       EN = PD5                       OK
UART6     RS485_3       转向              RX = PC7    TX = PC6        EN = PC8

UART2     调试串口                        RX = PA3    TX = PA2
UART3     TTL/RS422     IMU预留422        RX = PD     TX = PD8
UART4     RS232         上位机/遥控器     RX = PA1    TX = PA0                                    OK

DA油门      PA5:Throttle1_DA      PF7:Throttle2_Lock                                              OK
电源电压    PB0

GPIO        功能        优先级
PG0         运行灯

ENC1        TIM1        CH1 = PE8-9       CH2 = PE10-11
ENC2        TIM3        CH1 = PA6       CH2 = PA7

PC15        空挡          1                                                                       OK
PC13        前进挡        2                                                                       OK
PC14        倒挡          3                                                                       OK

PF2         空挡          1                                                                       OK
PF0         左转向        2                                                                       OK
PF1         右转向        3                                                                       OK

PF3         刹车1                                                                                 OK
PF4         刹车2                                                                                 OK

PF12        上限位                                                                                OK
PF13        下限位                                                                                OK
PE2         TOF超声
PF14        警示灯

PD6         电源1(5v,9v,12v)                                                                      OK
PD7         电源2(转向电机24V)                                                                    OK
PG9         电源3(电推杆)                                                                         OK

PB13        推杆限位1                                                                             OK
PB14        推杆限位2                                                                             OK
PB15        推杆限位3                                                                             OK

PE13        推杆限位4                                                                             OK
PE14        推杆限位5                                                                             OK
PE15        推杆限位6                                                                             OK

PB10        推杆限位7                                                                             OK
PB11        推杆限位8                                                                             OK
PB12        推杆限位9                                                                             OK

PC0         前进挡
PC1         倒挡


2021/10/12
-初始版本
-添加IQmath,AngleMath
-修改中断向量地址VECT_TAB_OFFSET = 0
-构造Timer7中断频率10K时间片100uS*10个
-main函数中while循环设置1mS*10个任务时间片，LEDIO配置，1Hz闪烁
--------------------------输出版本2021-10-14--------------------------------
-编写调试串口、IMU串口、上位机串口底层程序并初步调试
--------------------------输出版本2021-10-14A-------------------------------
-编写3路485底层程序并初步调试
-添加CRC校验
-添加电推杆中间层，电推杆协议编写，发送函数编写
--------------------------输出版本2021-10-15--------------------------------
-编写升降逻辑控制
-编写拉线传感器服务函数
--------------------------输出版本2021-10-19--------------------------------
-编写抱夹逻辑控制
-编写IO底层驱动和控制接口
-编写驱动轮正交编码器底层驱动

--------------------------输出版本2022-01-07--------------------------------

-Report添加故障字，同时故障、初始化等状态不再限制Report上传
-添加上位机掉线停止机制，当前：掉线停止，上线恢复（上线恢复限制待后续添加）
-故障状态仅响应故障清除等部分指令
-增加上位机通讯故障
-故障后状态机联动，进入RunSta_Fault
-清除故障联动进入 RunSta_Reset2Idle 状态
-修改HostCom通讯看门狗触发机制，第一次通讯后触发，否则看门狗一直无效，避免主控延时启动等情况的故障误报
-添加状态机复位联动复位控制指令
--------------------------输出版本2022-01-12--------------------------------

-------------------------------------------------------------------------------
------------------------版本V0.2对应二期V0.2版本硬件---------------------------
-------------------------------------------------------------------------------
-电推杆五合一、控制下放，串口控制
-相应指令贯通
-拉线通讯下放,数据转发
-推杆限位开关取消

-构造刹车PID，生成刹车推杆指令
-T法+M法测速，弥补低速精度问题
---------------------------------------------

20220706
-添加E2PROM底层驱动                     -ok
-添加LED4、5、6驱动（LED4驱动蜂鸣器）   -ok
    int8_t DoSetLED4 ( SW2Sta Sta );
    int8_t DoSetLED5 ( SW2Sta Sta );
    int8_t DoSetLED6 ( SW2Sta Sta );
    
-添加充电口打开检测                     -ok
    DI_ReadByIndex( eStatus, DI_CHG_DET) 引脚高电平为打开状态

-添加温度和动力24V电压检测
    int16_t Get_Temperature( void )
    uint16_t Get_Motor_24V( void )       下一版硬件可用

-添加叉车电池、备用电池电压检测
    uint16_t Get_E_Stop_80V( void )
    uint16_t Get_BAT_24V( void )
    
-添加急停触发电流检测
    int16_t Get_E_Stop_1A( void )
    
    
-编写数据库管理程序：初始化参数结构体、本地数据库与E2PROM之间的数据传输、校验
-删除遗留的升降、抱夹初始化控制
-编写1分4串口WK2124底层审批驱动代码

20221012
-清理调试串口无用代码
-编写本地升级标记管理代码
-重设内存地址和向量表地址
-打通升级时到电推杆的透传通路
-打通升级时到方向盘的透传通路

20221025
-增加硬件版本号相关代码，IO默认下拉
-添加所有板子的版本信息、参数上传
-修改软件版本号格式为Year*1000000+Mon*10000+Day*100+Hour
-输入改为浮空输入

20222201
-获取程序指针用来自动判定向量表偏移地址减少出错
-修改批处理文件，用来分别生成出厂Hex和升级BIN文件
-增加Boot软件版本、出厂软件版本和新升级软件版本并存储、同时显示
-修改串口引脚与波特率匹配进一步降低误码率
-补全电推杆参数表
-修改与电推杆通信发送消息队列bug，保证发送频率稳定
-整理添加故障定义结构体
-添加oledg故障显示以及相关驱动代码


20230426
-删除wk2124相关代码
-增加SPI2驱动LED灯带代码
-发现并修复基定时器占用超时bug：
    关闭无用计算SpdClc_T ( 50000 )
    TIM_BASE_FREQ改为10K(运行灯获取10k)
    新增高速计时，50K
    按实际需求重排中断优先级
-调整OLED屏IIC驱动引脚PF3，PF4
-模拟IIC依靠50KHZ计时器调用
-调整OLED显示信息模式，增加按键，按一下停住再按一下切屏


20231214  4号车首次发布版本
基本满足需求文档
出厂版本号：1.0.0
初次发布升级版本：1.0.1

20231214
解决host上报转向油门挂挡ack清零的问题；

20231220
打开转向的角度限制又±45°改为±60°
增加向上位机报文的升降油压和抱夹油压

20231227
打开避障雷达部分功能（仅检测一个片区）
增加灯光状态闪烁（绿色闪烁：有挡位且无故障和报警；绿色长亮：无挡位且无故障和报警；
黄色长亮：有警告或进入避障减速区；红色长亮：有故障或进入避障停车区；红黄交替闪烁：有急停触发或急停区）
增加整车控制模式上传（自动/手动/遥控）

20240110
更新与上位机通信协议，增加避障雷达状态上报，避障雷达开关ack，故障清除指令ack，转向油压上报等；
增加两个新指令，避障雷达开关，故障清除指令；
增加新功能，车辆停止超过10s，下次运动时鸣笛2s；

20240224
4号车由于刹车问题，将驻车制动改为行车制动用，程序上添加驻车制动控制逻辑；
